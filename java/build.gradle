plugins {
    id 'java'
}

group 'edu.umn.biomedicus'

def gitVersion = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty'
        standardOutput = stdout
    }
    return stdout.toString().replaceFirst('^v', "").trim()
}

version gitVersion()

targetCompatibility = 1.8
sourceCompatibility = 1.8

repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
    }
    mavenLocal()
}

def junitVersion = '5.3.1'
def slf4jVersion = '1.7.26'
def jaxbVersion = '2.3.2'

dependencies {
    implementation group: 'org.jetbrains', name: 'annotations', version: '17.0.0'

    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    implementation group: 'edu.umn.nlpie', name: 'nlpnewt', version: '[0.0, )'
    implementation group: 'edu.umn.biomedicus', name: 'biomedicus-tokenizer', version: '0.0.3'
    implementation group: 'org.rocksdb', name: 'rocksdbjni', version: '6.0.1'

    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: jaxbVersion
    implementation group: 'org.yaml', name: 'snakeyaml', version: '1.24'

    runtimeOnly group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: jaxbVersion
    runtimeOnly group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.11.2'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.+'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
}

test {
    useJUnitPlatform()
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'NLP-NEWT',
                'Implementation-Version': version,
                'Main-Class': 'edu.umn.nlpnewt.Newt'
    }
    setArchiveBaseName project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}